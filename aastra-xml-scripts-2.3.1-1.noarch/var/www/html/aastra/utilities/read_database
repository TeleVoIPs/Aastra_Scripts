#!/usr/bin/php -q
<?php 
#############################################################################
# Debug tool for aastra-xml-scripts
#
# This script dumps the content of any context file, all of it or just 
# limited to an application.
#
# Copyright 2009 Aastra Telecom Ltd
#
# Usage
# 	read_context.php contextID [appli]
#
#############################################################################

#############################################################################
# PHP customization for includes and warnings
#############################################################################
chdir(dirname(__FILE__));
$os = strtolower(PHP_OS);
if(strpos($os, "win") === false) ini_set('include_path',ini_get('include_path').':include:../include');
else ini_set('include_path',ini_get('include_path').';include;..\include');
error_reporting(E_ERROR | E_PARSE);

#############################################################################
# Includes
#############################################################################
require_once('AastraAsterisk.php');

#############################################################################
# Private functions
#############################################################################
function display($title,$result,$comment='')
{
echo str_pad($title.'  ',40,'.');
echo '  ';
echo $result;
echo "\n";
if($comment) echo '-> '.$comment."\n";
}

function format_time($input)
{
Global $AA_FORMAT_DT;

# Split the input
$timepart=substr($input,0,5);
list($hour,$minute)=explode('-',$timepart);
if($AA_FORMAT_DT=='US')  
	{
	switch($hour)
		{
		case '00':
		case '0':
			$hour='12';
			$ampm='AM';
			break;
		case '12':
			$ampm='PM';
			break;
		default:
			if($hour>12)
				{
				$hour-=12;
				$ampm='PM';
				}
			else $ampm='AM';
			break;
		}
	$return=$hour.':'.$minute.' '.$ampm;
	}
else $return=$hour.':'.$minute;

# Return formatted text
return($return);
}

#############################################################################
# Main code
#############################################################################
# Test parameters
if($argc<2) 
	{
	echo "Usage: ./".basename(__FILE__)." user\n";
	exit;
	}

# Get user
$user=$argv[1];

# Caller ID
display('CallerID',Aastra_get_callerid_Asterisk($user));

# Personal numbers
$array_user=Aastra_manage_userinfo_Asterisk($user,'get');
$array_index=array(	'cell'=>'Cell',
		  	'home'=>'Home',
			'other'=>'Other',
			);
foreach($array_index as $key=>$value)
	{
	if($array_user[$key]!='') display('Personal numbers/'.$value,$array_user[$key]);
	else display('Personal numbers/'.$value,'Not configured');
	}

# DND
$dnd=Aastra_manage_dnd_Asterisk($user,'get');
if($dnd==1) display('DND','Activated');
else display('DND','Deactivated');

# CFWD
$cfwd=Aastra_manage_cf_Asterisk($user,'get');
if($cf!='') display('CFWD','Set to '.$cfwd);
else display('CFWD','Deactivated');

# FOLLOW-ME
$array_fm=Aastra_manage_followme_Asterisk($user,'get_all');
if($array_fm['status']=='2') display('Follow-me','Not configured');
else
	{
	if($array_fm['status']=='1') display('Follow-me/Status','Activated');
	else display('Follow-me/Status','Deactivated');
	display('Follow-me/Initial Ring time',$array_fm['prering']);
	display('Follow-me/Ring time',$array_fm['grptime']);
	if($array_fm['grpconf']) display('Follow-me/Confirm Calls','Yes');
	else display('Follow-me/Confirm Calls','No');
	$numbers='';
	foreach($array_fm['grplist'] as $key=>$value) $numbers.=$value.' ';
	display('Follow-me/Numbers',count($array_fm['grplist']),$numbers);
	}

# PRESENCE
$status_text=Aastra_status_config_Asterisk();
$away=Aastra_manage_presence_Asterisk($user,'get');
display('Presence/Status',$status_text[$away['status']]['label']);
if($away['status']!=AA_PRESENCE_AVAILABLE)
	{
	$line=Aastra_format_presence_dt_Asterisk($away['return']);
	if(count($line)==1) display('Presence/Return Date/Time',$line[0]);
	else display('Presence/Return Date-Time',$line[0].' '.$line[1]);
	}
foreach($status_text as $key=>$value)
	{
	if($key!=AA_PRESENCE_AVAILABLE) $array_action[]=$key;
	}
foreach($array_action as $state)
	{
	switch($away['action'][$state])
		{
		case AA_PRESENCE_ACT_DND:
			display('Presence/Action if '.$status_text[$state]['label'],'DND');
			break;
		case AA_PRESENCE_ACT_CFWD:
			display('Presence/Action if '.$status_text[$state]['label'],'CFWD to '.$away['act_param'][$state]);
			break;
		case AA_PRESENCE_ACT_FM:
			display('Presence/Action if '.$status_text[$state]['label'],'FMFM');
			break;
		default:
			display('Presence/Action if '.$status_text[$state]['label'],'DO NOTHING');
			break;
		}
	}
if($AA_AUTOLOGOUT) 
	{
	if($away['logout']!='') display('Auto-logout','Set to '.format_time($away['logout']));
	else display('Auto-logout','Not set');
	}
?>