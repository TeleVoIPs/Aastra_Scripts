#!/usr/bin/php -q
<?php
#############################################################################
# Asterisk Apply a prf on existing user(s)
#
# Aastra SIP Phones 1.4.2 or better
#
# Copyright 2007-2010 Aastra Telecom Ltd
#
# Supported Aastra Phones
#   All phones
#
# ./script [-r] user1 user2...
# or
# ./script [-r] ALL
#   -r 	to reboot the phone after the MAC.cfg file generation
#   ALL  	will apply to all the users already configured using data from 
#   		/var/cache/aastra/startup_asterisk.cfg
#
#############################################################################

#############################################################################
# PHP customization for includes and warnings
#############################################################################
chdir(dirname(__FILE__)); 
$os=strtolower(PHP_OS);
if(strpos($os, 'win') === false) ini_set('include_path',ini_get('include_path').':include:../include');
else ini_set('include_path',ini_get('include_path').';include;..\include');
error_reporting(E_ERROR | E_PARSE);

#############################################################################
# Includes
#############################################################################
require_once('AastraCommon.php');
require_once('AastraAsterisk.php');

#############################################################################
# Private functions
#############################################################################
function create_mac($mac,$extension,$username,$secret,$callerid,$model,$profile,$tz_name,$tz_code,$fmode,$array_language,$header)
{
Global $AA_XML_SERVER;
Global $AA_PROXY_SERVER;
Global $AA_REGISTRAR_SERVER;
Global $AA_XMLDIRECTORY;
Global $AA_PRESENCE_STATE;
Global $AA_SPEEDDIAL_STATE;
Global $AA_ASK_TZ;
Global $language;

# So far so good
$return=True;

# Read profile file
if($fmode=='1') $array_profile=Aastra_readCFGfile('../asterisk/'.$profile.'-user.prf', '#', ':');
else $array_profile=Aastra_readCFGfile('../asterisk/'.$profile.'-device-nouser.prf', '#', ':');

# Get park configuration
$park=Aastra_get_park_config_Asterisk();

# Prepare replace strings
$search=array('/\$\$AA_SIPAUTHNAME_AA\$\$/',
		'/\$\$AA_SIPSECRET_AA\$\$/',
		'/\$\$AA_SIPUSERNAME_AA\$\$/',
		'/\$\$AA_SIPCALLERID_AA\$\$/',
		'/\$\$AA_TZ_NAME_AA\$\$/',
		'/\$\$AA_TZ_CODE_AA\$\$/',
		'/\$\$AA_XML_SERVER_AA\$\$/',
		'/\$\$AA_PROXY_SERVER_AA\$\$/',
		'/\$\$AA_REGISTRAR_SERVER_AA\$\$/',
		'/\$\$AA_PARKINGLOT_AA\$\$/',
		'/\$\$AA_XMLDIRECTORY_AA\$\$/',
		'/\$\$AA_INTERCOM_CODE_AA\$\$/',
		'/\$\$AA_POLLING_INT_AA\$\$/'
		);
$replace=array(	quotemeta($username),
			$secret,
			quotemeta($extension),
			quotemeta($callerid),
			$tz_name,
			$tz_code,
			$AA_XML_SERVER,
			$AA_PROXY_SERVER,
			$AA_REGISTRAR_SERVER,
			$park['parkext'],
			$AA_XMLDIRECTORY,
			Aastra_get_intercom_config_Asterisk(),
			Aastra_get_polling_interval_Asterisk($header)
		);

# Also use the core piece for device and user
if($fmode=='2')
	{
	foreach($array_profile['Core'] as $key => $value)
		{
		$line=preg_replace($search, $replace, $value);
		if(stristr($line,'$$AA_KEYPRESS_AA$$'))
			{
			$pieces=explode(' ',$key);
			$line = preg_replace('/\$\$AA_KEYPRESS_AA\$\$/', $pieces[0], $line);
			}
		$array_config[$key]=$line;
		}
	}

# Use the common piece
foreach($array_profile['Common'] as $key => $value)
	{
	$line = preg_replace($search, $replace, $value);
	if(stristr($line,'$$AA_KEYPRESS_AA$$'))
		{
		$pieces=explode(' ',$key);
		$line = preg_replace('/\$\$AA_KEYPRESS_AA\$\$/', $pieces[0], $line);
		}
	$array_config[$key]=$line;
	}

# Model exists
if($array_profile[$model]!=NULL)
	{
	# Check if full template
	if (key_exists('template',$array_profile[$model])) $template=$array_profile[$model]['template'];
	else $template=$model;

	# Use the template
	foreach($array_profile[$template] as $key => $value)
		{
		if($key!='template')
			{
			$line = preg_replace($search, $replace, $value);
			if(stristr($line,'$$AA_KEYPRESS_AA$$'))
				{
				$pieces=explode(' ',$key);
				$line = preg_replace('/\$\$AA_KEYPRESS_AA\$\$/', $pieces[0], $line);
				}
			$array_config[$key]=$line;
			}
		}

	# Use the add-ons
	if($template!=$model)
		{
		foreach($array_profile[$model] as $key => $value)
			{
			if($key!='template')
				{
				$line = preg_replace($search, $replace, $value);
				$array_config[$key]=$line;
				}
			}
		}
	}

# Read user custom configuration
$array_user=Aastra_readCFGfile('../asterisk/user-custom.prf', '#', ':');

# Only in extensions mode
if($fmode=='1')
	{
	# Add custom configuration
	if($array_user[$extension]!=NULL)
       	{
        	# Use the user configuration additions
        	foreach($array_user[$extension] as $key => $value)
              	{
                	$line = preg_replace($search, $replace, $value);
                	if(stristr($line,'$$AA_KEYPRESS_AA$$'))
                     	{
                        	$pieces=explode(' ',$key);
                        	$line = preg_replace('/\$\$AA_KEYPRESS_AA\$\$/', $pieces[0], $line);
                        	}
                	$array_config[$key]=$line;
                	}
        	}
	}

# Remove TZ if not needed
if(!$AA_ASK_TZ)
	{
	unset($array_config['time zone name']);
	unset($array_config['time zone code']);
	}

# Process language
if($array_language['language']!='') $array_config['language']=$array_language['language'];
if($array_language['web language']!='') $array_config['web language']=$array_language['web language'];
if($array_language['input language']!='') $array_config['input language']=$array_language['input language'];

# User mode
if($fmode=='1')
	{
	# Process day/night
	foreach($array_config as $key=>$value) 
		{
		if(strstr($value,'daynight.php'))
			{
			$pieces=explode(' ',$key);
			if(stristr($pieces[0],'expmod')) $appli=$pieces[0].' '.$pieces[1];
			else $appli=$pieces[0];
			$url=parse_url($value);
			parse_str($url['query'],$parse);
			if($parse['index']!='') $index=$parse['index'];
			else $index='';
			if(!Aastra_is_daynight_appli_allowed_Asterisk($username,$index))
				{
				unset($array_config[$appli.' type']);
				unset($array_config[$appli.' label']);
				unset($array_config[$appli.' value']);
				unset($array_config[$appli.' states']);
				}
			}
		}

	# Process presence
	if(!$AA_PRESENCE_STATE)
		{
		foreach($array_config as $key=>$value) 
			{
			if(strstr($value,'away.php'))
				{
				$pieces=explode(' ',$key);
				if(stristr($pieces[0],'expmod')) $appli=$pieces[0].' '.$pieces[1];
				else $appli=$pieces[0];
				break;
				}
			}
		if($appli!='')
			{
			unset($array_config[$appli.' type']);
			unset($array_config[$appli.' label']);
			unset($array_config[$appli.' value']);
			unset($array_config[$appli.' states']);
			}
		}

	# Process speed dial
	if(!$AA_SPEEDDIAL_STATE)
		{
		foreach($array_config as $key=>$value) 
			{
			if(strstr($value,'speed.php'))
				{
				$pieces=explode(' ',$key);
				if(stristr($pieces[0],'expmod')) $appli=$pieces[0].' '.$pieces[1];
				else $appli=$pieces[0];
				break;
				}
			}
		if($appli!='')
			{
			unset($array_config[$appli.' type']);
			unset($array_config[$appli.' label']);
			unset($array_config[$appli.' value']);
			unset($array_config[$appli.' states']);
			}
		}
	}

# Config file
$write=@fopen(AASTRA_TFTP_DIRECTORY.'/'.$mac.'.cfg', 'w');

# No problem with the file
if($write)
	{
	# Dump the config file
	foreach($array_config as $key=>$value) 
		{
		$test=False;
		if(stristr($key,'key') and stristr($key,'label')) $test=True;
		if(stristr($key,'xml application title')) $test=True;
		if($test) fputs($write,$key.': '.Aastra_get_label($value,$language)."\n");
		else fputs($write,$key.': '.$value."\n");
		}

	# Close the MAC.cfg file
	fclose($write);
	}
else $return=False;

# Update the user keys
if($AA_FREEPBX_MODE=='1')
	{
	$keys=Aastra_get_user_context($username,'keys');
	unset($keys[$model]);
	Aastra_save_user_context($username,'keys',$keys);
	$keys=Aastra_get_user_context($username,'keys_saved');
	unset($keys[$model]);
	Aastra_save_user_context($username,'keys_saved',$keys);
	}

# Return result
return($return);
}

#############################################################################
# Active code
#############################################################################

# Global parameters
$reboot=False;
$users=array();
$all_users=False;
$usage=False;

# Process input parameters
$stop=False;
foreach($argv as $key=>$value)
	{
	if($key!=0)
		{
		if(substr($value,0,1)=='-')
			{
			switch($value)
				{
				case '-r':
					$reboot=True;
					break;
				default:
					$usage=True;
					$stop=True;
					break;
				}
			}
		else 
			{
			if($value!='ALL') $users[]=$value;
			else
				{
				$all_users=True;
				$stop=True;
				}
			}
		}
	if($stop) break;
	}

# Test input parameters
if(($usage) or ((count($users)==0) and !$all_users))
	{
	echo "Usage: ./".basename(__FILE__)." [user/device or ALL] [user/device or ALL]...\n";
	echo "OR\n";
	echo "Usage: ./".basename(__FILE__)." -r [user/device or ALL] [user/device or ALL] to remotely reboot the phone\n";
	exit;
	}

# Retrieve all users
$user_array=Aastra_read_HDconfig_file(AASTRA_PATH_CACHE.'startup_asterisk.cfg');
if($all_users) foreach($user_array as $key=>$value) $users[]=$key;

# Retrieve language configuration
$code=Aastra_ask_language_Asterisk();

# Process each user
foreach($users as $extension)
	{
	# Message
	$line="\nProcessing user/device $extension\n";
	echo $line;
	echo str_repeat('-',strlen($line)-2)."\n";

	# Check if user exists
	if(!$user_array[$extension]) echo "Aborted: User $extension not found in cache file startup_asterisk.cfg\n";
	else
		{
		# Retrieve all parameters
		$mac=$user_array[$extension]['mac'];
		$model=$user_array[$extension]['model'];
		$header=$user_array[$extension];
		if($AA_FREEPBX_MODE=='1')
			{
			$username=Aastra_get_username_Asterisk($extension);
			$secret=Aastra_get_secret_Asterisk($extension);
			}
		else $username=$extension;
		$callerid=Aastra_get_callerid_Asterisk($extension);

		# Check MAC.cfg
		$mac_file=AASTRA_TFTP_DIRECTORY.'/'.$mac.'.cfg';
		if(!file_exists($mac_file))	echo "Aborted: Initial MAC file not found\n";
		else
			{
			# Load MAC file
			$array_temp=Aastra_readCFGfile($mac_file,'#',':');
			$array_config=$array_temp[''];
			$tz_name=$array_config['time zone name'];
			$tz_code=$array_config['time zone code'];
			$AA_XML_SERVER=$array_config['sip line1 proxy ip'].':80';
			$AA_PROXY_SERVER=$array_config['sip line1 proxy ip'];
			$AA_REGISTRAR_SERVER=$array_config['sip line1 registrar ip'];
			if($AA_FREEPBX_MODE=='2') $secret=$array_config['sip line1 password'];
			$array_language['language']=$array_config['language'];
			$array_language['web language']=$array_config['web language'];
			$array_language['input language']=$array_config['input language'];

			# Display update
			echo "MAC: $mac\n";
			echo "Model: $model\n";
			echo "CallerID: $callerid\n";

			# Get phone language
			if($array_language['language']=='') $language=$code[1][$code[2]];
			else $language=$code[1][$array_language['language']];
			if($language=='') $language='en';

			# Retrieve user profile
			$profile=Aastra_get_startup_profile_Asterisk($extension);

			# Create mac.cfg
			if(create_mac($mac,$extension,$username,$secret,$callerid,$model,$profile,$tz_name,$tz_code,$AA_FREEPBX_MODE,$array_language,$header)) 
				{
				echo "MAC file updated\n";
				if($reboot)
					{
					$array[0]=$extension;
					if(Aastra_is_user_registered_Asterisk($extension)) 
						{
						Aastra_send_SIP_notify_Asterisk('aastra-check-cfg',$array);
						echo "Reboot command sent\n";
						}
					else echo "Phone not currently registered, reboot command not sent\n";
					}
				}
			else echo "Failed to update MAC file\n";
			}
		}
	}

exit;
?>